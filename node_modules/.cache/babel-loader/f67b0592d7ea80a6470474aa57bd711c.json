{"ast":null,"code":"import _toConsumableArray from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./QuestionEdit.css\";import{Button,Form}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var QuestionEdit=function QuestionEdit(_ref){var index=_ref.index,lastIndex=_ref.lastIndex,question=_ref.question,editQuestion=_ref.editQuestion,removeQuestion=_ref.removeQuestion,swapQuestion=_ref.swapQuestion;var _useState=useState(question.options.findIndex(function(s){return question.expected===s;})),_useState2=_slicedToArray(_useState,2),a=_useState2[0],b=_useState2[1];var handleNumOptions=function handleNumOptions(e){b(0);var newNum=parseInt(e.target.value)<1?1:parseInt(e.target.value);editQuestion(question.id,_objectSpread(_objectSpread({},question),{},{type:\"multiple_choice_question\",expected:\"Example Answer\",options:Array(newNum).fill(\"Example Answer\")}));};var handleSwitch=function handleSwitch(){b(0);editQuestion(question.id,_objectSpread(_objectSpread({},question),{},{type:\"multiple_choice_question\",expected:\"Example Answer\",options:Array(3).fill(\"Example Answer\")}));};var handlePoints=function handlePoints(e){question.points=parseInt(e.target.value);editQuestion(question.id,question);};var handleChoiceChange=function handleChoiceChange(e,i){var newOptions=_toConsumableArray(question.options);newOptions.splice(i,1,e.target.value);editQuestion(question.id,_objectSpread(_objectSpread({},question),{},{options:newOptions,expected:a===i?e.target.value:question.expected}));};var handleRadioChange=function handleRadioChange(e){var idx=parseInt(e.target.value);b(idx);editQuestion(question.id,_objectSpread(_objectSpread({},question),{},{expected:question.options[idx]}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_question\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_title_row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_title_box\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[index+1,\". \"]}),/*#__PURE__*/_jsx(Form.Group,{className:\"title_input\",controlId:\"editTitleFormId\",children:/*#__PURE__*/_jsx(Form.Control,{value:question.body,\"data-testid\":\"edit_question_title\",onChange:function onChange(e){editQuestion(question.id,_objectSpread(_objectSpread({},question),{},{body:e.target.value}));}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_title_box\",children:[/*#__PURE__*/_jsx(Form.Group,{className:\"points_input\",controlId:\"editPointsFormId\",children:/*#__PURE__*/_jsx(Form.Control,{value:question.points,type:\"number\",onChange:handlePoints})}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"pt\",question.points!==1?\"s\":\"\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"center_section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_answer_box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"type_form\",children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"questionTypeFormId\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Type: \"}),/*#__PURE__*/_jsxs(Form.Select,{className:\"type_dropdown\",value:question.type,onChange:handleSwitch,children:[/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"question_type_dropdown_\"+index,value:\"multiple_choice_question\",children:\"Multiple Choice\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"question_type_dropdown_\"+index,value:\"short_answer_question\",children:\"Short Answer\"})]})]}),question.type===\"multiple_choice_question\"&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form.Group,{controlId:\"editNumChoicesId\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Choices: \"}),/*#__PURE__*/_jsx(Form.Control,{className:\"num_choices\",value:question.options.length,type:\"number\",onChange:handleNumOptions})]})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[question.type===\"short_answer_question\"&&/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formEditShortExpectedBox\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Answer:\"}),/*#__PURE__*/_jsx(Form.Control,{value:question.expected,onChange:function onChange(e){editQuestion(question.id,_objectSpread(_objectSpread({},question),{},{expected:e.target.value}));}})]}),question.type===\"multiple_choice_question\"&&/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formEditMultipleExpectedBox\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Answer:\"}),question.options.map(function(option,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"radio_question_box\",children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",name:\"questionChoice\"+index,value:i,checked:a===i,onChange:handleRadioChange}),/*#__PURE__*/_jsx(Form.Control,{name:\"questionChoice\"+index,value:option,onChange:function onChange(e){handleChoiceChange(e,i);}})]},i);})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"swap_button_container\",children:[/*#__PURE__*/_jsx(Button,{disabled:index===0,className:\"swap_button\",onClick:function onClick(){swapQuestion(index,index-1);},children:\"\\u25B2\"}),/*#__PURE__*/_jsx(Button,{disabled:index===lastIndex,className:\"swap_button\",onClick:function onClick(){swapQuestion(index,index+1);},children:\"\\u25BC\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_question_footer\",children:[/*#__PURE__*/_jsx(Form.Check,{className:\"published_question_check\",\"data-testid\":\"question_published_check\",type:\"checkbox\",id:\"is_question_published_check\",label:\"Published\",checked:question.published,onChange:function onChange(e){editQuestion(question.id,_objectSpread(_objectSpread({},question),{},{published:e.target.checked}));}}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:function onClick(){removeQuestion(question.id);},children:\"Delete\"})]})]})]});};","map":{"version":3,"sources":["/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/src/quizzer/QuestionEdit.tsx"],"names":["React","useState","Button","Form","QuestionEdit","index","lastIndex","question","editQuestion","removeQuestion","swapQuestion","options","findIndex","s","expected","a","b","handleNumOptions","e","newNum","parseInt","target","value","id","type","Array","fill","handleSwitch","handlePoints","points","handleChoiceChange","i","newOptions","splice","handleRadioChange","idx","body","length","map","option","published","checked"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Question, QuestionType } from \"../interfaces/question\";\n\nimport \"./QuestionEdit.css\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport const QuestionEdit = ({\n    index,\n    lastIndex,\n    question,\n    editQuestion,\n    removeQuestion,\n    swapQuestion\n}: {index: number; lastIndex: number; question: Question; editQuestion: (questionId: number, newQuestion: Question) => void; removeQuestion: (questionId: number) => void; swapQuestion: (idx1: number, idx2: number) => void;}) => {\n    const [a, b] = useState<number>(\n        question.options.findIndex((s: string) => question.expected === s)\n    );\n\n    const handleNumOptions = (e: React.ChangeEvent<HTMLInputElement>) => {\n        b(0);\n        const newNum =\n            parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\n        editQuestion(question.id, {\n            ...question,\n            type: \"multiple_choice_question\",\n            expected: \"Example Answer\",\n            options: Array(newNum).fill(\"Example Answer\")\n        });\n    };\n\n    const handleSwitch = () => {\n        b(0);\n        editQuestion(question.id, {\n            ...question,\n            type: \"multiple_choice_question\",\n            expected: \"Example Answer\",\n            options: Array(3).fill(\"Example Answer\")\n        });\n    };\n\n    const handlePoints = (e: React.ChangeEvent<HTMLInputElement>) => {\n    \tquestion.points = parseInt(e.target.value)\n        editQuestion(question.id, question);\n    };\n\n    const handleChoiceChange = (\n        e: React.ChangeEvent<HTMLInputElement>,\n        i: number\n    ) => {\n        const newOptions = [...question.options];\n        newOptions.splice(i, 1, e.target.value);\n        editQuestion(question.id, {\n            ...question,\n            options: newOptions,\n            expected: a === i ? e.target.value : question.expected\n        });\n    };\n\n    const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const idx = parseInt(e.target.value);\n        b(idx);\n        editQuestion(question.id, {\n            ...question,\n            expected: question.options[idx]\n        });\n    };\n\n    return (\n        <>\n            <hr />\n            <div className=\"edit_question\">\n                <div className=\"edit_title_row\">\n                    <div className=\"edit_title_box\">\n                        <h4>{index + 1}. </h4>\n                        <Form.Group\n                            className=\"title_input\"\n                            controlId=\"editTitleFormId\"\n                        >\n                            <Form.Control\n                                value={question.body}\n                                data-testid=\"edit_question_title\"\n                                onChange={(\n                                    e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                    editQuestion(question.id, {\n                                        ...question,\n                                        body: e.target.value\n                                    });\n                                }}\n                            ></Form.Control>\n                        </Form.Group>\n                    </div>\n                    <div className=\"edit_title_box\">\n                        <Form.Group\n                            className=\"points_input\"\n                            controlId=\"editPointsFormId\"\n                        >\n                            <Form.Control\n                                value={question.points}\n                                type=\"number\"\n                                onChange={handlePoints}\n                            ></Form.Control>\n                        </Form.Group>\n                        <h4>pt{question.points !== 1 ? \"s\" : \"\"}</h4>\n                    </div>\n                </div>\n                <div className=\"center_section\">\n                    <div className=\"edit_answer_box\">\n                        <div className=\"type_form\">\n                            <Form.Group controlId=\"questionTypeFormId\">\n                                <Form.Label>Type: </Form.Label>\n                                <Form.Select\n                                    className=\"type_dropdown\"\n                                    value={question.type}\n                                    onChange={handleSwitch}\n                                >\n                                    <option\n                                        data-testid={\n                                            \"question_type_dropdown_\" + index\n                                        }\n                                        value=\"multiple_choice_question\"\n                                    >\n                                        Multiple Choice\n                                    </option>\n                                    <option\n                                        data-testid={\n                                            \"question_type_dropdown_\" + index\n                                        }\n                                        value=\"short_answer_question\"\n                                    >\n                                        Short Answer\n                                    </option>\n                                </Form.Select>\n                            </Form.Group>\n                            {question.type === \"multiple_choice_question\" && (\n                                <>\n                                    <Form.Group controlId=\"editNumChoicesId\">\n                                        <Form.Label>Choices: </Form.Label>\n                                        <Form.Control\n                                            className=\"num_choices\"\n                                            value={question.options.length}\n                                            type=\"number\"\n                                            onChange={handleNumOptions}\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </>\n                            )}\n                        </div>\n                        <div>\n                            {question.type === \"short_answer_question\" && (\n                                <Form.Group controlId=\"formEditShortExpectedBox\">\n                                    <Form.Label>Answer:</Form.Label>\n                                    <Form.Control\n                                        value={question.expected}\n                                        onChange={(\n                                            e: React.ChangeEvent<HTMLInputElement>\n                                        ) => {\n                                            editQuestion(question.id, {\n                                                ...question,\n                                                expected: e.target.value\n                                            });\n                                        }}\n                                    ></Form.Control>\n                                </Form.Group>\n                            )}\n                            {question.type === \"multiple_choice_question\" && (\n                                <Form.Group controlId=\"formEditMultipleExpectedBox\">\n                                    <Form.Label>Answer:</Form.Label>\n                                    {question.options.map(\n                                        (option: string, i: number) => (\n                                            <div\n                                                key={i}\n                                                className=\"radio_question_box\"\n                                            >\n                                                <Form.Check\n                                                    type=\"radio\"\n                                                    name={\n                                                        \"questionChoice\" + index\n                                                    }\n                                                    value={i}\n                                                    checked={a === i}\n                                                    onChange={handleRadioChange}\n                                                />\n                                                <Form.Control\n                                                    name={\n                                                        \"questionChoice\" + index\n                                                    }\n                                                    value={option}\n                                                    onChange={(\n                                                        e: React.ChangeEvent<HTMLInputElement>\n                                                    ) => {\n                                                        handleChoiceChange(\n                                                            e,\n                                                            i\n                                                        );\n                                                    }}\n                                                ></Form.Control>\n                                            </div>\n                                        )\n                                    )}\n                                </Form.Group>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"swap_button_container\">\n                        <Button\n                            disabled={index === 0}\n                            className=\"swap_button\"\n                            onClick={() => {\n                                swapQuestion(index, index - 1);\n                            }}\n                        >\n                            ▲\n                        </Button>\n                        <Button\n                            disabled={index === lastIndex}\n                            className=\"swap_button\"\n                            onClick={() => {\n                                swapQuestion(index, index + 1);\n                            }}\n                        >\n                            ▼\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"edit_question_footer\">\n                    <Form.Check\n                        className=\"published_question_check\"\n                        data-testid=\"question_published_check\"\n                        type=\"checkbox\"\n                        id=\"is_question_published_check\"\n                        label=\"Published\"\n                        checked={question.published}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                            editQuestion(question.id, {\n                                ...question,\n                                published: e.target.checked\n                            });\n                        }}\n                    ></Form.Check>\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => {\n                            removeQuestion(question.id);\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </div>\n            </div>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}