{"ast":null,"code":"var _jsxFileName = \"/Users/tkadans/Documents/Repos/quizzer/src/quizzer/QuizList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { QuizCard } from \"./QuizCard\";\nimport \"./QuizList.css\";\nimport { QuizView } from \"./QuizView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuizList = _ref => {\n  _s();\n\n  let {\n    quizzes,\n    editQuiz,\n    deleteQuiz,\n    showModal\n  } = _ref;\n  const [displayId, setDisplayId] = useState(null);\n\n  const handleQuizView = id => {\n    setDisplayId(id);\n  };\n\n  const resetQuizView = () => {\n    setDisplayId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz_list\",\n    children: [!displayId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [quizzes.map(quiz => /*#__PURE__*/_jsxDEV(QuizCard, {\n        quiz: quiz,\n        handleClick: handleQuizView\n      }, quiz.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"add_btn\",\n        onClick: showModal,\n        children: \"Add New Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), quizzes.map(quiz => {\n      if (displayId === quiz.id) {\n        return /*#__PURE__*/_jsxDEV(QuizView, {\n          quiz: quiz,\n          editQuiz: editQuiz,\n          deleteQuiz: deleteQuiz,\n          resetView: resetQuizView\n        }, quiz.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 32\n        }, this);\n      }\n\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizList, \"PtR2k45VmUqwcb8S+GYe6BgzSvY=\");\n\n_c = QuizList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"sources":["/Users/tkadans/Documents/Repos/quizzer/src/quizzer/QuizList.tsx"],"names":["React","useState","Button","QuizCard","QuizView","QuizList","quizzes","editQuiz","deleteQuiz","showModal","displayId","setDisplayId","handleQuizView","id","resetQuizView","map","quiz"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAUlB;AAAA;;AAAA,MAVmB;AACrBC,IAAAA,OADqB;AAErBC,IAAAA,QAFqB;AAGrBC,IAAAA,UAHqB;AAIrBC,IAAAA;AAJqB,GAUnB;AACF,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAgB,IAAhB,CAA1C;;AAEA,QAAMW,cAAc,GAAIC,EAAD,IAAgB;AACnCF,IAAAA,YAAY,CAACE,EAAD,CAAZ;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACK,CAACD,SAAD,iBACG;AAAA,iBACKJ,OAAO,CAACS,GAAR,CAAaC,IAAD,iBACT,QAAC,QAAD;AAEI,QAAA,IAAI,EAAEA,IAFV;AAGI,QAAA,WAAW,EAAEJ;AAHjB,SACSI,IAAI,CAACH,EADd;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAQI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAEJ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,oBAFR,EAeKH,OAAO,CAACS,GAAR,CAAaC,IAAD,IAAgB;AACzB,UAAIN,SAAS,KAAKM,IAAI,CAACH,EAAvB,EAA2B;AACpB,4BAAQ,QAAC,QAAD;AAEH,UAAA,IAAI,EAAEG,IAFH;AAGH,UAAA,QAAQ,EAAET,QAHP;AAIH,UAAA,UAAU,EAAEC,UAJT;AAKH,UAAA,SAAS,EAAEM;AALR,WACEE,IAAI,CAACH,EADP;AAAA;AAAA;AAAA;AAAA,gBAAR;AAQN;;AACD,aAAO,IAAP;AACH,KAZA,CAfL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CApDM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Quiz } from \"../interfaces/quiz\";\nimport { QuizCard } from \"./QuizCard\";\nimport \"./QuizList.css\";\nimport { QuizView } from \"./QuizView\";\n\nexport const QuizList = ({\n    quizzes,\n    editQuiz,\n    deleteQuiz,\n    showModal\n}: {\n    quizzes: Quiz[] ,\n    editQuiz: (qId: number, newQuiz: Quiz) => void;\n    deleteQuiz: (qId: number)=> void;\n    showModal: () => void\n}) => {\n    const [displayId, setDisplayId] = useState<null | number>(null);\n\n    const handleQuizView = (id: number) => {\n        setDisplayId(id);\n    };\n\n    const resetQuizView = () => {\n        setDisplayId(null);\n    };\n\n    return (\n        <div className=\"quiz_list\">\n            {!displayId && (\n                <>\n                    {quizzes.map((quiz: Quiz) => (\n                        <QuizCard\n                            key={quiz.id}\n                            quiz={quiz}\n                            handleClick={handleQuizView}\n                        ></QuizCard>\n                    ))}\n                    <Button className=\"add_btn\" onClick={showModal}>\n                        Add New Quiz\n                    </Button>\n                </>\n            )}\n            {quizzes.map((quiz: Quiz) => {\n                if (displayId === quiz.id) {\n                       return (<QuizView\n                            key={quiz.id}\n                            quiz={quiz}\n                            editQuiz={editQuiz}\n                            deleteQuiz={deleteQuiz}\n                            resetView={resetQuizView}\n                        ></QuizView>)\n                \n                }\n                return null;\n            })}\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}