{"ast":null,"code":"import _toConsumableArray from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{QuizList}from\"./QuizList\";import{AddQuizModal}from\"./AddQuizModal\";import\"./Quizzer.css\";import sample from\"../data/quizzes.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QUIZZES=sample.map(function(quiz){return _objectSpread(_objectSpread({},quiz),{},{questionList:quiz.questionList.map(function(q){return _objectSpread(_objectSpread({},q),{},{submission:\"\",type:q.type});})});});export var Quizzer=function Quizzer(){var _useState=useState(QUIZZES),_useState2=_slicedToArray(_useState,2),quizzes=_useState2[0],setQuizzes=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showAddModal=_useState4[0],setShowAddModal=_useState4[1];function editQuiz(qId,newQuiz){setQuizzes(quizzes.map(function(q){return q.id===qId?newQuiz:q;}));}function addQuiz(title,body){var newQuiz={id:quizzes.length+1,title:title,body:body,published:true,questionList:[]};setQuizzes([].concat(_toConsumableArray(quizzes),[newQuiz]));}function deleteQuiz(qId){setQuizzes(quizzes.filter(function(q){return qId!==q.id;}));}var handleShowModal=function handleShowModal(){return setShowAddModal(true);};var handleCloseModal=function handleCloseModal(){return setShowAddModal(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"quizzer\",children:[/*#__PURE__*/_jsx(QuizList,{quizzes:quizzes,editQuiz:editQuiz,deleteQuiz:deleteQuiz,showModal:handleShowModal}),/*#__PURE__*/_jsx(AddQuizModal,{show:showAddModal,handleClose:handleCloseModal,addQuiz:addQuiz}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h2\",{style:{color:\"white\"},children:\"Application Sketch\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{color:\"white\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Completed Features\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"completedList\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\" \",\"Users can see a list of quizzes, including the quizzes title, description, and how many questions it has (TESTED)\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can select a specific quiz to see the questions, including the questions name, body, and points (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Quiz questions can be of AT LEAST two types: a short answer question or multiple choice question (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can enter or choose an answer for a quiz question, and be told if they are correct (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can see how many total points they have earned (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can clear out their existing answers for a quiz (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can publish or unpublish a question (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can filter the questions in a list so that only published questions are shown (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can edit the questions and fields of a quiz (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can add a new quiz question (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can delete an existing quiz question (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can reorder quiz questions (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can add a new quiz (TESTED)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Users can delete an existing quiz (TESTED)\"})]})]})]});};","map":{"version":3,"sources":["/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/src/quizzer/Quizzer.tsx"],"names":["React","useState","QuizList","AddQuizModal","sample","QUIZZES","map","quiz","questionList","q","submission","type","Quizzer","quizzes","setQuizzes","showAddModal","setShowAddModal","editQuiz","qId","newQuiz","id","addQuiz","title","body","length","published","deleteQuiz","filter","handleShowModal","handleCloseModal","color"],"mappings":"+cAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAGA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,MAAO,eAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAGD,MAAM,CAACE,GAAP,CACZ,SAACC,IAAD,wCACOA,IADP,MAEIC,YAAY,CAAED,IAAI,CAACC,YAAL,CAAkBF,GAAlB,CACV,SAACG,CAAD,wCACOA,CADP,MAEIC,UAAU,CAAE,EAFhB,CAGIC,IAAI,CAAEF,CAAC,CAACE,IAHZ,IADU,CAFlB,IADY,CAAhB,CAaA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACzB,cAA8BX,QAAQ,CAASI,OAAT,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eACA,eAAwCb,QAAQ,CAAC,KAAD,CAAhD,yCAAOc,YAAP,eAAqBC,eAArB,eAEA,QAASC,CAAAA,QAAT,CAAkBC,GAAlB,CAA+BC,OAA/B,CAA8C,CAC1CL,UAAU,CACND,OAAO,CAACP,GAAR,CAAY,SAACG,CAAD,QAAoBA,CAAAA,CAAC,CAACW,EAAF,GAASF,GAAT,CAAeC,OAAf,CAAyBV,CAA7C,EAAZ,CADM,CAAV,CAGH,CAED,QAASY,CAAAA,OAAT,CAAiBC,KAAjB,CAAgCC,IAAhC,CAA8C,CAC1C,GAAMJ,CAAAA,OAAa,CAAG,CAClBC,EAAE,CAAEP,OAAO,CAACW,MAAR,CAAiB,CADH,CAElBF,KAAK,CAAEA,KAFW,CAGlBC,IAAI,CAAEA,IAHY,CAIlBE,SAAS,CAAE,IAJO,CAKlBjB,YAAY,CAAE,EALI,CAAtB,CAOAM,UAAU,8BAAKD,OAAL,GAAcM,OAAd,GAAV,CACH,CAED,QAASO,CAAAA,UAAT,CAAoBR,GAApB,CAAiC,CAC7BJ,UAAU,CAACD,OAAO,CAACc,MAAR,CAAe,SAAClB,CAAD,QAAsBS,CAAAA,GAAG,GAAKT,CAAC,CAACW,EAAhC,EAAf,CAAD,CAAV,CACH,CAED,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAMZ,CAAAA,eAAe,CAAC,IAAD,CAArB,EAAxB,CACA,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMb,CAAAA,eAAe,CAAC,KAAD,CAArB,EAAzB,CAEA,mBACI,aAAK,SAAS,CAAC,SAAf,wBACI,KAAC,QAAD,EACI,OAAO,CAAEH,OADb,CAEI,QAAQ,CAAEI,QAFd,CAGI,UAAU,CAAES,UAHhB,CAII,SAAS,CAAEE,eAJf,EADJ,cAOI,KAAC,YAAD,EACI,IAAI,CAAEb,YADV,CAEI,WAAW,CAAEc,gBAFjB,CAGI,OAAO,CAAER,OAHb,EAPJ,cAYI,aAZJ,cAaI,WAAI,KAAK,CAAE,CAAES,KAAK,CAAE,OAAT,CAAX,gCAbJ,cAeI,aAfJ,cAgBI,aAAK,KAAK,CAAE,CAAEA,KAAK,CAAE,OAAT,CAAZ,wBACI,0CADJ,cAEI,YAAI,SAAS,CAAC,eAAd,wBACI,sBACK,GADL,uHADJ,cAOI,sIAPJ,cAWI,iIAXJ,cAeI,yHAfJ,cAmBI,qFAnBJ,cAuBI,sFAvBJ,cA2BI,0EA3BJ,cA4BI,oHA5BJ,cAgCI,kFAhCJ,cAoCI,kEApCJ,cAqCI,2EArCJ,cAsCI,iEAtCJ,cAuCI,yDAvCJ,cAwCI,kEAxCJ,GAFJ,GAhBJ,GADJ,CAgEH,CA5FM","sourcesContent":["import React, { useState } from \"react\";\nimport { Quiz } from \"../interfaces/quiz\";\nimport { Question, QuestionType } from \"../interfaces/question\";\nimport { QuizList } from \"./QuizList\";\nimport { AddQuizModal } from \"./AddQuizModal\";\n\nimport \"./Quizzer.css\";\nimport sample from \"../data/quizzes.json\";\n\nconst QUIZZES = sample.map(\n    (quiz): Quiz => ({\n        ...quiz,\n        questionList: quiz.questionList.map(\n            (q): Question => ({\n                ...q,\n                submission: \"\",\n                type: q.type as QuestionType\n            })\n        )\n    })\n);\n\nexport const Quizzer = () => {\n    const [quizzes, setQuizzes] = useState<Quiz[]>(QUIZZES);\n    const [showAddModal, setShowAddModal] = useState(false);\n\n    function editQuiz(qId: number, newQuiz: Quiz) {\n        setQuizzes(\n            quizzes.map((q: Quiz): Quiz => (q.id === qId ? newQuiz : q))\n        );\n    }\n\n    function addQuiz(title: string, body: string) {\n        const newQuiz: Quiz = {\n            id: quizzes.length + 1,\n            title: title,\n            body: body,\n            published: true,\n            questionList: [],\n        };\n        setQuizzes([...quizzes, newQuiz]);\n    }\n\n    function deleteQuiz(qId: number) {\n        setQuizzes(quizzes.filter((q: Quiz): boolean => qId !== q.id));\n    }\n\n    const handleShowModal = () => setShowAddModal(true);\n    const handleCloseModal = () => setShowAddModal(false);\n\n    return (\n        <div className=\"quizzer\">\n            <QuizList\n                quizzes={quizzes}\n                editQuiz={editQuiz}\n                deleteQuiz={deleteQuiz}\n                showModal={handleShowModal}\n            ></QuizList>\n            <AddQuizModal\n                show={showAddModal}\n                handleClose={handleCloseModal}\n                addQuiz={addQuiz}\n            ></AddQuizModal>\n            <hr />\n            <h2 style={{ color: \"white\" }}>Application Sketch</h2>\n            {/* <img src={require(\"./sketchFINAL.jpg\")} /> */}\n            <hr />\n            <div style={{ color: \"white\" }}>\n                <h2>Completed Features</h2>\n                <ul className=\"completedList\">\n                    <li>\n                        {\" \"}\n                        Users can see a list of quizzes, including the quizzes\n                        title, description, and how many questions it has\n                        (TESTED)\n                    </li>\n                    <li>\n                        Users can select a specific quiz to see the questions,\n                        including the questions name, body, and points (TESTED)\n                    </li>\n                    <li>\n                        Quiz questions can be of AT LEAST two types: a short\n                        answer question or multiple choice question (TESTED)\n                    </li>\n                    <li>\n                        Users can enter or choose an answer for a quiz question,\n                        and be told if they are correct (TESTED)\n                    </li>\n                    <li>\n                        Users can see how many total points they have earned\n                        (TESTED)\n                    </li>\n                    <li>\n                        Users can clear out their existing answers for a quiz\n                        (TESTED)\n                    </li>\n                    <li>Users can publish or unpublish a question (TESTED)</li>\n                    <li>\n                        Users can filter the questions in a list so that only\n                        published questions are shown (TESTED)\n                    </li>\n                    <li>\n                        Users can edit the questions and fields of a quiz\n                        (TESTED)\n                    </li>\n                    <li>Users can add a new quiz question (TESTED)</li>\n                    <li>Users can delete an existing quiz question (TESTED)</li>\n                    <li>Users can reorder quiz questions (TESTED)</li>\n                    <li>Users can add a new quiz (TESTED)</li>\n                    <li>Users can delete an existing quiz (TESTED)</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}