{"ast":null,"code":"var _jsxFileName = \"/Users/tkadans/Documents/quizzer_start/src/quizzer/Quizzer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { QuizList } from \"./QuizList\";\nimport { AddQuizModal } from \"./AddQuizModal\";\nimport \"./Quizzer.css\";\nimport sample from \"../data/quizzes.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUIZZES = sample.map(_c = quiz => ({ ...quiz,\n  questionList: quiz.questionList.map(q => ({ ...q,\n    submission: \"\",\n    type: q.type\n  }))\n}));\n_c2 = QUIZZES;\nexport const Quizzer = () => {\n  _s();\n\n  const [quizzes, setQuizzes] = useState(QUIZZES);\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  function editQuiz(qId, newQuiz) {\n    setQuizzes(quizzes.map(q => q.id === qId ? newQuiz : q));\n  }\n\n  function addQuiz(title, body) {\n    const newQuiz = {\n      id: quizzes.length + 1,\n      title: title,\n      body: body,\n      published: true,\n      questionList: []\n    };\n    setQuizzes([...quizzes, newQuiz]);\n  }\n\n  function deleteQuiz(qId) {\n    setQuizzes(quizzes.filter(q => qId !== q.id));\n  }\n\n  const handleShowModal = () => setShowAddModal(true);\n\n  const handleCloseModal = () => setShowAddModal(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quizzer\",\n    children: [/*#__PURE__*/_jsxDEV(QuizList, {\n      quizzes: quizzes,\n      editQuiz: editQuiz,\n      deleteQuiz: deleteQuiz,\n      showModal: handleShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddQuizModal, {\n      show: showAddModal,\n      handleClose: handleCloseModal,\n      addQuiz: addQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Application Sketch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Completed Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"completedList\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", \"Users can see a list of quizzes, including the quizzes title, description, and how many questions it has (TESTED)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can select a specific quiz to see the questions, including the questions name, body, and points (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Quiz questions can be of AT LEAST two types: a short answer question or multiple choice question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can enter or choose an answer for a quiz question, and be told if they are correct (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can see how many total points they have earned (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can clear out their existing answers for a quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can publish or unpublish a question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can filter the questions in a list so that only published questions are shown (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can edit the questions and fields of a quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can add a new quiz question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can delete an existing quiz question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can reorder quiz questions (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can add a new quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can delete an existing quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quizzer, \"m0d1gjGLG2L4wpO966WQ8E0t96o=\");\n\n_c3 = Quizzer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QUIZZES$sample.map\");\n$RefreshReg$(_c2, \"QUIZZES\");\n$RefreshReg$(_c3, \"Quizzer\");","map":{"version":3,"sources":["/Users/tkadans/Documents/quizzer_start/src/quizzer/Quizzer.tsx"],"names":["React","useState","QuizList","AddQuizModal","sample","QUIZZES","map","quiz","questionList","q","submission","type","Quizzer","quizzes","setQuizzes","showAddModal","setShowAddModal","editQuiz","qId","newQuiz","id","addQuiz","title","body","length","published","deleteQuiz","filter","handleShowModal","handleCloseModal","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAP,MACXC,IAAD,KAAiB,EACb,GAAGA,IADU;AAEbC,EAAAA,YAAY,EAAED,IAAI,CAACC,YAAL,CAAkBF,GAAlB,CACTG,CAAD,KAAkB,EACd,GAAGA,CADW;AAEdC,IAAAA,UAAU,EAAE,EAFE;AAGdC,IAAAA,IAAI,EAAEF,CAAC,CAACE;AAHM,GAAlB,CADU;AAFD,CAAjB,CADY,CAAhB;MAAMN,O;AAaN,OAAO,MAAMO,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAASI,OAAT,CAAtC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASgB,QAAT,CAAkBC,GAAlB,EAA+BC,OAA/B,EAA8C;AAC1CL,IAAAA,UAAU,CACND,OAAO,CAACP,GAAR,CAAaG,CAAD,IAAoBA,CAAC,CAACW,EAAF,KAASF,GAAT,GAAeC,OAAf,GAAyBV,CAAzD,CADM,CAAV;AAGH;;AAED,WAASY,OAAT,CAAiBC,KAAjB,EAAgCC,IAAhC,EAA8C;AAC1C,UAAMJ,OAAa,GAAG;AAClBC,MAAAA,EAAE,EAAEP,OAAO,CAACW,MAAR,GAAiB,CADH;AAElBF,MAAAA,KAAK,EAAEA,KAFW;AAGlBC,MAAAA,IAAI,EAAEA,IAHY;AAIlBE,MAAAA,SAAS,EAAE,IAJO;AAKlBjB,MAAAA,YAAY,EAAE;AALI,KAAtB;AAOAM,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaM,OAAb,CAAD,CAAV;AACH;;AAED,WAASO,UAAT,CAAoBR,GAApB,EAAiC;AAC7BJ,IAAAA,UAAU,CAACD,OAAO,CAACc,MAAR,CAAgBlB,CAAD,IAAsBS,GAAG,KAAKT,CAAC,CAACW,EAA/C,CAAD,CAAV;AACH;;AAED,QAAMQ,eAAe,GAAG,MAAMZ,eAAe,CAAC,IAAD,CAA7C;;AACA,QAAMa,gBAAgB,GAAG,MAAMb,eAAe,CAAC,KAAD,CAA9C;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,OAAO,EAAEH,OADb;AAEI,MAAA,QAAQ,EAAEI,QAFd;AAGI,MAAA,UAAU,EAAES,UAHhB;AAII,MAAA,SAAS,EAAEE;AAJf;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,YAAD;AACI,MAAA,IAAI,EAAEb,YADV;AAEI,MAAA,WAAW,EAAEc,gBAFjB;AAGI,MAAA,OAAO,EAAER;AAHb;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAI,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAeI;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,gCACI;AAAA,qBACK,GADL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCJ,eAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCJ,eAuCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCJ,eAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH,CA5FM;;GAAMlB,O;;MAAAA,O","sourcesContent":["import React, { useState } from \"react\";\nimport { Quiz } from \"../interfaces/quiz\";\nimport { Question, QuestionType } from \"../interfaces/question\";\nimport { QuizList } from \"./QuizList\";\nimport { AddQuizModal } from \"./AddQuizModal\";\n\nimport \"./Quizzer.css\";\nimport sample from \"../data/quizzes.json\";\n\nconst QUIZZES = sample.map(\n    (quiz): Quiz => ({\n        ...quiz,\n        questionList: quiz.questionList.map(\n            (q): Question => ({\n                ...q,\n                submission: \"\",\n                type: q.type as QuestionType\n            })\n        )\n    })\n);\n\nexport const Quizzer = () => {\n    const [quizzes, setQuizzes] = useState<Quiz[]>(QUIZZES);\n    const [showAddModal, setShowAddModal] = useState(false);\n\n    function editQuiz(qId: number, newQuiz: Quiz) {\n        setQuizzes(\n            quizzes.map((q: Quiz): Quiz => (q.id === qId ? newQuiz : q))\n        );\n    }\n\n    function addQuiz(title: string, body: string) {\n        const newQuiz: Quiz = {\n            id: quizzes.length + 1,\n            title: title,\n            body: body,\n            published: true,\n            questionList: [],\n        };\n        setQuizzes([...quizzes, newQuiz]);\n    }\n\n    function deleteQuiz(qId: number) {\n        setQuizzes(quizzes.filter((q: Quiz): boolean => qId !== q.id));\n    }\n\n    const handleShowModal = () => setShowAddModal(true);\n    const handleCloseModal = () => setShowAddModal(false);\n\n    return (\n        <div className=\"quizzer\">\n            <QuizList\n                quizzes={quizzes}\n                editQuiz={editQuiz}\n                deleteQuiz={deleteQuiz}\n                showModal={handleShowModal}\n            ></QuizList>\n            <AddQuizModal\n                show={showAddModal}\n                handleClose={handleCloseModal}\n                addQuiz={addQuiz}\n            ></AddQuizModal>\n            <hr />\n            <h2 style={{ color: \"white\" }}>Application Sketch</h2>\n            {/* <img src={require(\"./sketchFINAL.jpg\")} /> */}\n            <hr />\n            <div style={{ color: \"white\" }}>\n                <h2>Completed Features</h2>\n                <ul className=\"completedList\">\n                    <li>\n                        {\" \"}\n                        Users can see a list of quizzes, including the quizzes\n                        title, description, and how many questions it has\n                        (TESTED)\n                    </li>\n                    <li>\n                        Users can select a specific quiz to see the questions,\n                        including the questions name, body, and points (TESTED)\n                    </li>\n                    <li>\n                        Quiz questions can be of AT LEAST two types: a short\n                        answer question or multiple choice question (TESTED)\n                    </li>\n                    <li>\n                        Users can enter or choose an answer for a quiz question,\n                        and be told if they are correct (TESTED)\n                    </li>\n                    <li>\n                        Users can see how many total points they have earned\n                        (TESTED)\n                    </li>\n                    <li>\n                        Users can clear out their existing answers for a quiz\n                        (TESTED)\n                    </li>\n                    <li>Users can publish or unpublish a question (TESTED)</li>\n                    <li>\n                        Users can filter the questions in a list so that only\n                        published questions are shown (TESTED)\n                    </li>\n                    <li>\n                        Users can edit the questions and fields of a quiz\n                        (TESTED)\n                    </li>\n                    <li>Users can add a new quiz question (TESTED)</li>\n                    <li>Users can delete an existing quiz question (TESTED)</li>\n                    <li>Users can reorder quiz questions (TESTED)</li>\n                    <li>Users can add a new quiz (TESTED)</li>\n                    <li>Users can delete an existing quiz (TESTED)</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}