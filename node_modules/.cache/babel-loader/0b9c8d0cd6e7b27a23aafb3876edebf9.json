{"ast":null,"code":"import _toConsumableArray from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import{QuestionEdit}from\"./QuestionEdit\";import\"./QuizEdit.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var QuizEdit=function QuizEdit(_ref){var quiz=_ref.quiz,editQuiz=_ref.editQuiz,deleteQuiz=_ref.deleteQuiz,switchEdit=_ref.switchEdit,resetView=_ref.resetView;var _useState=useState(_objectSpread({},quiz)),_useState2=_slicedToArray(_useState,2),newQuiz=_useState2[0],setNewQuiz=_useState2[1];var editQuestion=function editQuestion(questionId,newQuestion){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:newQuiz.questionList.map(function(question){if(question.id===questionId){return newQuestion;}return question;})}));};var removeQuestion=function removeQuestion(questionId){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:newQuiz.questionList.filter(function(question){return question.id!==questionId;})}));};var saveChanges=function saveChanges(){editQuiz(quiz.id,_objectSpread({},newQuiz));};var swapQuestion=function swapQuestion(idx1,idx2){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:newQuiz.questionList.map(function(q,idx){if(idx===idx1)return newQuiz.questionList[idx2];if(idx===idx2)return newQuiz.questionList[idx1];return q;})}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"edit_header\",children:/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formEditQuizId\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title_published_flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit_title_area\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Title: \"}),/*#__PURE__*/_jsx(Form.Control,{value:newQuiz.title,onChange:function onChange(e){return setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{title:e.target.value}));}})]}),/*#__PURE__*/_jsx(Form.Check,{className:\"published_check\",type:\"checkbox\",id:\"is-published_check\",label:\"Quiz Published\",\"data-testid\":\"Quiz Published\",checked:newQuiz.published,onChange:function onChange(e){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{published:!newQuiz.published}));}})]}),/*#__PURE__*/_jsx(Form.Label,{children:\"Description: \"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:3,value:newQuiz.body,onChange:function onChange(e){return setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{body:e.target.value}));}})]})}),/*#__PURE__*/_jsx(\"div\",{children:newQuiz.questionList.map(function(q,index){return/*#__PURE__*/_jsx(QuestionEdit,{index:index,lastIndex:newQuiz.questionList.length-1,question:q,editQuestion:editQuestion,removeQuestion:removeQuestion,swapQuestion:swapQuestion},newQuiz.id+\"|\"+q.id);})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{className:\"add_question_button\",onClick:function onClick(){setNewQuiz(_objectSpread(_objectSpread({},newQuiz),{},{questionList:[].concat(_toConsumableArray(newQuiz.questionList),[{id:newQuiz.questionList.length,body:\"Example Question\",type:\"short_answer_question\",options:[],submission:\"\",expected:\"Example Answer\",points:1,published:false}])}));},children:\"Add Question\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit_footer\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"save_edit_btn\",onClick:function onClick(){saveChanges();switchEdit();},children:\"Save\"}),/*#__PURE__*/_jsx(Button,{variant:\"warning\",onClick:switchEdit,children:\"Cancel\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:function onClick(){deleteQuiz(quiz.id);resetView();},children:\"Delete Quiz\"})]})]})]});};","map":{"version":3,"sources":["/home/nathan/Desktop/Fall 2023/CISC 275/Tasks/task11/quizzer_start/src/quizzer/QuizEdit.tsx"],"names":["React","useState","Button","Form","QuestionEdit","QuizEdit","quiz","editQuiz","deleteQuiz","switchEdit","resetView","newQuiz","setNewQuiz","editQuestion","questionId","newQuestion","questionList","map","question","id","removeQuestion","filter","saveChanges","swapQuestion","idx1","idx2","q","idx","title","e","target","value","published","body","index","length","type","options","submission","expected","points"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Question } from \"../interfaces/question\";\nimport { Quiz } from \"../interfaces/quiz\";\nimport { QuestionEdit } from \"./QuestionEdit\";\n\nimport \"./QuizEdit.css\";\n\nexport const QuizEdit = ({\n    quiz,\n    editQuiz,\n    deleteQuiz,\n    switchEdit,\n    resetView\n}: {quiz: Quiz; editQuiz: (id: number, updatedQuiz: Quiz) => void; deleteQuiz: (id: number) => void; switchEdit: () => void; resetView: () => void;}) => {\n    const [newQuiz, setNewQuiz] = useState<Quiz>({ ...quiz });\n\n    const editQuestion = (questionId: number, newQuestion: Question) => {\n        setNewQuiz({\n            ...newQuiz,\n            questionList: newQuiz.questionList.map((question) => {\n                if (question.id === questionId) {\n                    return newQuestion;\n                }\n                return question;\n            }\n            )\n        });\n    };\n\n    const removeQuestion = (questionId: number) => {\n        setNewQuiz({\n            ...newQuiz,\n            questionList: newQuiz.questionList.filter((question: Question) => {\n               return question.id !== questionId;\n            })\n            \n        });\n    };\n\n    const saveChanges = () => {\n        editQuiz(quiz.id, { ...newQuiz });\n    };\n\n    const swapQuestion = (idx1: number, idx2: number) => {\n        setNewQuiz({\n            ...newQuiz,\n            questionList: newQuiz.questionList.map(\n                (q: Question, idx: number): Question => {\n                    if (idx === idx1) return newQuiz.questionList[idx2];\n                    if (idx === idx2) return newQuiz.questionList[idx1];\n                    return q;\n                }\n            )\n        });\n    };\n\n    return (\n        <div>\n            <div className=\"edit_header\">\n                <Form.Group controlId=\"formEditQuizId\">\n                    <div className=\"title_published_flex\">\n                        <div className=\"edit_title_area\">\n                            <Form.Label>Title: </Form.Label>\n                            <Form.Control\n                                value={newQuiz.title}\n                                onChange={(\n                                    e: React.ChangeEvent<HTMLInputElement>\n                                ) =>\n                                    setNewQuiz({\n                                        ...newQuiz,\n                                        title: e.target.value\n                                    })\n                                }\n                            ></Form.Control>\n                        </div>\n                        <Form.Check\n                            className=\"published_check\"\n                            type=\"checkbox\"\n                            id=\"is-published_check\"\n                            label=\"Quiz Published\"\n                            data-testid=\"Quiz Published\"\n                            checked={newQuiz.published}\n                            onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                                setNewQuiz({\n                                    ...newQuiz,\n                                    published: !newQuiz.published\n                                });\n                            }}\n                        ></Form.Check>\n                    </div>\n                    <Form.Label>Description: </Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        value={newQuiz.body}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            setNewQuiz({ ...newQuiz, body: e.target.value })\n                        }\n                    ></Form.Control>\n                </Form.Group>\n            </div>\n\n            <div>\n                {newQuiz.questionList.map((q: Question, index: number) => (\n                    <QuestionEdit\n                        key={newQuiz.id + \"|\" + q.id}\n                        index={index}\n                        lastIndex={newQuiz.questionList.length - 1}\n                        question={q}\n                        editQuestion={editQuestion}\n                        removeQuestion={removeQuestion}\n                        swapQuestion={swapQuestion}\n                    ></QuestionEdit>\n                ))}\n            </div>\n            <hr />\n            <div>\n                <Button\n                    className=\"add_question_button\"\n                    onClick={() => {\n                        setNewQuiz({\n                            ...newQuiz,\n                            questionList: [\n                                ...newQuiz.questionList,\n                                {\n                                    id: newQuiz.questionList.length,\n                                    body: \"Example Question\",\n                                    type: \"short_answer_question\",\n                                    options: [],\n                                    submission: \"\",\n                                    expected: \"Example Answer\",\n                                    points: 1,\n                                    published: false\n                                }\n                            ]\n                        });\n                    }}\n                >\n                    Add Question\n                </Button>\n                <div className=\"edit_footer\">\n                    <div>\n                        <Button\n                            variant=\"success\"\n                            className=\"save_edit_btn\"\n                            onClick={() => {\n                                saveChanges();\n                                switchEdit();\n                            }}\n                        >\n                            Save\n                        </Button>\n                        <Button variant=\"warning\" onClick={switchEdit}>\n                            Cancel\n                        </Button>\n                    </div>\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => {\n                            deleteQuiz(quiz.id);\n                            resetView();\n                        }}\n                    >\n                        Delete Quiz\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}